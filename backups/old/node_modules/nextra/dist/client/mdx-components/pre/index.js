import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import cn from "clsx";
import { WordWrapIcon } from "../../icons/index.js";
import { CopyToClipboard } from "./copy-to-clipboard.js";
import { ToggleWordWrapButton } from "./toggle-word-wrap-button.js";
const classes = {
  border: cn("x:border x:border-gray-300 x:dark:border-neutral-700", "x:contrast-more:border-gray-900 x:contrast-more:dark:border-gray-50")
};
const Pre = (t0) => {
  const $ = _c(36);
  let children;
  let className;
  let copy;
  let filename;
  let hasWordWrap;
  let icon;
  let pagefindIgnore;
  let props;
  if ($[0] !== t0) {
    const {
      children: t12,
      className: t22,
      "data-filename": t32,
      "data-copy": t42,
      "data-language": _language,
      "data-word-wrap": t52,
      "data-pagefind-ignore": t62,
      icon: t72,
      ...t82
    } = t0;
    children = t12;
    className = t22;
    filename = t32;
    copy = t42;
    hasWordWrap = t52;
    pagefindIgnore = t62;
    icon = t72;
    props = t82;
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = copy;
    $[4] = filename;
    $[5] = hasWordWrap;
    $[6] = icon;
    $[7] = pagefindIgnore;
    $[8] = props;
  } else {
    children = $[1];
    className = $[2];
    copy = $[3];
    filename = $[4];
    hasWordWrap = $[5];
    icon = $[6];
    pagefindIgnore = $[7];
    props = $[8];
  }
  let t1;
  if ($[9] !== copy || $[10] !== filename) {
    t1 = copy === "" && /* @__PURE__ */ jsx(CopyToClipboard, { className: filename ? "x:ms-auto x:text-sm" : "" });
    $[9] = copy;
    $[10] = filename;
    $[11] = t1;
  } else {
    t1 = $[11];
  }
  const copyButton = t1;
  let t2;
  if ($[12] !== copyButton || $[13] !== filename || $[14] !== icon) {
    t2 = filename && /* @__PURE__ */ jsxs("div", { className: cn("x:px-4 x:text-xs x:text-gray-700 x:dark:text-gray-200", "x:bg-gray-100 x:dark:bg-neutral-900", "x:flex x:items-center x:h-12 x:gap-2 x:rounded-t-md", classes.border, "x:border-b-0"), children: [
      icon,
      /* @__PURE__ */ jsx("span", { className: "x:truncate", children: filename }),
      copyButton
    ] });
    $[12] = copyButton;
    $[13] = filename;
    $[14] = icon;
    $[15] = t2;
  } else {
    t2 = $[15];
  }
  const t3 = filename ? "x:rounded-b-md" : "x:rounded-md";
  let t4;
  if ($[16] !== className || $[17] !== t3) {
    t4 = cn("x:group", "x:focus-visible:nextra-focus", "x:overflow-x-auto x:subpixel-antialiased x:text-[.9em]", "x:bg-white x:dark:bg-black x:py-4", "x:ring-1 x:ring-inset x:ring-gray-300 x:dark:ring-neutral-700", "x:contrast-more:ring-gray-900 x:contrast-more:dark:ring-gray-50", "x:contrast-more:contrast-150", t3, "not-prose", className);
    $[16] = className;
    $[17] = t3;
    $[18] = t4;
  } else {
    t4 = $[18];
  }
  const t5 = filename ? "x:top-14" : "x:top-2";
  let t6;
  if ($[19] !== t5) {
    t6 = cn("x:group-hover:opacity-100", "x:group-focus:opacity-100", "x:opacity-0 x:transition x:focus-within:opacity-100", "x:flex x:gap-1 x:absolute x:right-4", t5);
    $[19] = t5;
    $[20] = t6;
  } else {
    t6 = $[20];
  }
  let t7;
  if ($[21] !== hasWordWrap) {
    t7 = hasWordWrap === "" && /* @__PURE__ */ jsx(ToggleWordWrapButton, { children: /* @__PURE__ */ jsx(WordWrapIcon, { height: "1em" }) });
    $[21] = hasWordWrap;
    $[22] = t7;
  } else {
    t7 = $[22];
  }
  const t8 = !filename && copyButton;
  let t9;
  if ($[23] !== t6 || $[24] !== t7 || $[25] !== t8) {
    t9 = /* @__PURE__ */ jsxs("div", { className: t6, children: [
      t7,
      t8
    ] });
    $[23] = t6;
    $[24] = t7;
    $[25] = t8;
    $[26] = t9;
  } else {
    t9 = $[26];
  }
  let t10;
  if ($[27] !== children || $[28] !== props || $[29] !== t4 || $[30] !== t9) {
    t10 = /* @__PURE__ */ jsxs("pre", { className: t4, ...props, children: [
      t9,
      children
    ] });
    $[27] = children;
    $[28] = props;
    $[29] = t4;
    $[30] = t9;
    $[31] = t10;
  } else {
    t10 = $[31];
  }
  let t11;
  if ($[32] !== pagefindIgnore || $[33] !== t10 || $[34] !== t2) {
    t11 = /* @__PURE__ */ jsxs("div", { "data-pagefind-ignore": pagefindIgnore, className: "nextra-code x:relative x:not-first:mt-6", children: [
      t2,
      t10
    ] });
    $[32] = pagefindIgnore;
    $[33] = t10;
    $[34] = t2;
    $[35] = t11;
  } else {
    t11 = $[35];
  }
  return t11;
};
export {
  Pre,
  classes
};
