"use client";
import { jsx } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import { useEffect, useRef } from "react";
const ClientBanner = (props) => {
  const $ = _c(4);
  const banner = useRef(null);
  let t0;
  let t1;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = () => {
      const resizeObserver = new ResizeObserver(_temp);
      resizeObserver.observe(banner.current);
      return () => {
        resizeObserver.disconnect();
      };
    };
    t1 = [];
    $[0] = t0;
    $[1] = t1;
  } else {
    t0 = $[0];
    t1 = $[1];
  }
  useEffect(t0, t1);
  let t2;
  if ($[2] !== props) {
    t2 = /* @__PURE__ */ jsx("div", { ref: banner, ...props });
    $[2] = props;
    $[3] = t2;
  } else {
    t2 = $[3];
  }
  return t2;
};
function _temp(entries) {
  for (const entry of entries) {
    const {
      height
    } = entry.contentRect;
    document.documentElement.style.setProperty("--nextra-banner-height", `${height}px`);
  }
}
export {
  ClientBanner
};
