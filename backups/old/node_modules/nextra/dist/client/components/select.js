"use client";
import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import { Listbox, ListboxButton, ListboxOption, ListboxOptions } from "@headlessui/react";
import cn from "clsx";
import { Fragment } from "react";
import { CheckIcon } from "../icons/index.js";
const Select = (t0) => {
  const $ = _c(16);
  const {
    options,
    onChange,
    selectedOption,
    value,
    title,
    className
  } = t0;
  let t1;
  if ($[0] !== className) {
    t1 = (t22) => {
      const {
        hover,
        open,
        focus
      } = t22;
      return cn("x:cursor-pointer", "x:h-7 x:rounded-md x:px-2 x:text-xs x:font-medium x:transition-colors", open ? "x:bg-gray-200 x:text-gray-900 x:dark:bg-primary-100/10 x:dark:text-gray-50" : hover ? "x:bg-gray-100 x:text-gray-900 x:dark:bg-primary-100/5 x:dark:text-gray-50" : "x:text-gray-600 x:dark:text-gray-400", focus && "x:nextra-focus", className);
    };
    $[0] = className;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== selectedOption || $[3] !== t1 || $[4] !== title) {
    t2 = /* @__PURE__ */ jsx(ListboxButton, { title, className: t1, children: selectedOption });
    $[2] = selectedOption;
    $[3] = t1;
    $[4] = title;
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  let t3;
  if ($[6] === Symbol.for("react.memo_cache_sentinel")) {
    t3 = {
      to: "top start",
      gap: 10
    };
    $[6] = t3;
  } else {
    t3 = $[6];
  }
  let t4;
  if ($[7] !== options) {
    t4 = options.map(_temp2);
    $[7] = options;
    $[8] = t4;
  } else {
    t4 = $[8];
  }
  let t5;
  if ($[9] !== t4) {
    t5 = /* @__PURE__ */ jsx(ListboxOptions, { as: "ul", transition: true, anchor: t3, className: _temp, children: t4 });
    $[9] = t4;
    $[10] = t5;
  } else {
    t5 = $[10];
  }
  let t6;
  if ($[11] !== onChange || $[12] !== t2 || $[13] !== t5 || $[14] !== value) {
    t6 = /* @__PURE__ */ jsxs(Listbox, { value, onChange, children: [
      t2,
      t5
    ] });
    $[11] = onChange;
    $[12] = t2;
    $[13] = t5;
    $[14] = value;
    $[15] = t6;
  } else {
    t6 = $[15];
  }
  return t6;
};
function _temp(t0) {
  const {
    open: open_0
  } = t0;
  return cn("x:focus-visible:nextra-focus", open_0 ? "x:opacity-100" : "x:opacity-0", "x:motion-reduce:transition-none x:transition-opacity x:min-w-(--button-width) x:z-20 x:max-h-64 x:rounded-md x:border x:border-black/5 x:backdrop-blur-md x:bg-nextra-bg/70 x:py-1 x:text-sm x:shadow-lg x:dark:border-white/20");
}
function _temp2(option) {
  return /* @__PURE__ */ jsx(ListboxOption, { value: option.id, as: Fragment, children: (t0) => {
    const {
      selected,
      focus: focus_0
    } = t0;
    return /* @__PURE__ */ jsxs("li", { className: cn(focus_0 ? "x:bg-primary-50 x:text-primary-600 x:dark:bg-primary-500/10" : "x:text-gray-800 x:dark:text-gray-100", "x:cursor-pointer x:whitespace-nowrap x:py-1.5 x:px-3", "x:transition-colors", selected && "x:flex x:items-center x:justify-between x:gap-3"), children: [
      option.name,
      selected && /* @__PURE__ */ jsx(CheckIcon, { height: "1em" })
    ] });
  } }, option.id);
}
export {
  Select
};
