import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import cn from "clsx";
import { InformationCircleIcon } from "../icons/index.js";
const TypeToEmoji = {
  default: "\u{1F4A1}",
  error: "\u{1F6AB}",
  info: /* @__PURE__ */ jsx(InformationCircleIcon, { height: "20", className: "x:mt-1" }),
  warning: "\u26A0\uFE0F"
};
const classes = {
  default: cn("x:border-orange-100 x:bg-orange-50 x:text-orange-800 x:dark:border-orange-400/30 x:dark:bg-orange-400/20 x:dark:text-orange-300"),
  error: cn("x:border-red-200 x:bg-red-100 x:text-red-900 x:dark:border-red-200/30 x:dark:bg-red-900/30 x:dark:text-red-200"),
  info: cn("x:border-blue-200 x:bg-blue-100 x:text-blue-900 x:dark:border-blue-200/30 x:dark:bg-blue-900/30 x:dark:text-blue-200"),
  warning: cn("x:border-yellow-100 x:bg-yellow-50 x:text-yellow-900 x:dark:border-yellow-200/30 x:dark:bg-yellow-700/30 x:dark:text-yellow-200")
};
const Callout = (t0) => {
  const $ = _c(11);
  const {
    children,
    type: t1,
    emoji: t2
  } = t0;
  const type = t1 === void 0 ? "default" : t1;
  const emoji = t2 === void 0 ? TypeToEmoji[type] : t2;
  const t3 = classes[type];
  let t4;
  if ($[0] !== t3) {
    t4 = cn("nextra-callout x:overflow-x-auto x:mt-6 x:flex x:rounded-lg x:border x:py-2 x:pe-4", "x:contrast-more:border-current!", t3);
    $[0] = t3;
    $[1] = t4;
  } else {
    t4 = $[1];
  }
  let t5;
  if ($[2] === Symbol.for("react.memo_cache_sentinel")) {
    t5 = {
      fontFamily: '"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'
    };
    $[2] = t5;
  } else {
    t5 = $[2];
  }
  let t6;
  if ($[3] !== emoji) {
    t6 = /* @__PURE__ */ jsx("div", { className: "x:select-none x:text-xl x:ps-3 x:pe-2", style: t5, "data-pagefind-ignore": "all", children: emoji });
    $[3] = emoji;
    $[4] = t6;
  } else {
    t6 = $[4];
  }
  let t7;
  if ($[5] !== children) {
    t7 = /* @__PURE__ */ jsx("div", { className: "x:w-full x:min-w-0 x:leading-7", children });
    $[5] = children;
    $[6] = t7;
  } else {
    t7 = $[6];
  }
  let t8;
  if ($[7] !== t4 || $[8] !== t6 || $[9] !== t7) {
    t8 = /* @__PURE__ */ jsxs("div", { className: t4, children: [
      t6,
      t7
    ] });
    $[7] = t4;
    $[8] = t6;
    $[9] = t7;
    $[10] = t8;
  } else {
    t8 = $[10];
  }
  return t8;
};
export {
  Callout
};
