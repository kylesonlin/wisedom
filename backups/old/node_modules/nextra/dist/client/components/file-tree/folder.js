"use client";
import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import cn from "clsx";
import { useState } from "react";
import { FolderIcon, FolderOpenIcon } from "../../icons/index.js";
import { Button } from "../button.js";
const Folder = (t0) => {
  const $ = _c(16);
  const {
    name,
    open,
    children,
    defaultOpen: t1,
    active
  } = t0;
  const defaultOpen = t1 === void 0 ? false : t1;
  const [isOpen, setIsOpen] = useState(defaultOpen);
  let t2;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = () => {
      setIsOpen(_temp);
    };
    $[0] = t2;
  } else {
    t2 = $[0];
  }
  const toggle = t2;
  const isFolderOpen = open === void 0 ? isOpen : open;
  const ComponentToUse = isFolderOpen ? FolderOpenIcon : FolderIcon;
  let t3;
  if ($[1] !== active) {
    t3 = (t42) => {
      const {
        hover
      } = t42;
      return cn("x:flex x:items-center x:gap-1 x:break-all", "x:text-start", hover && "x:opacity-60", active && "x:text-primary-600");
    };
    $[1] = active;
    $[2] = t3;
  } else {
    t3 = $[2];
  }
  let t4;
  if ($[3] !== ComponentToUse) {
    t4 = /* @__PURE__ */ jsx(ComponentToUse, { height: "14", className: "x:shrink-0" });
    $[3] = ComponentToUse;
    $[4] = t4;
  } else {
    t4 = $[4];
  }
  let t5;
  if ($[5] !== name || $[6] !== open || $[7] !== t3 || $[8] !== t4) {
    t5 = /* @__PURE__ */ jsxs(Button, { onClick: toggle, disabled: open, className: t3, children: [
      t4,
      name
    ] });
    $[5] = name;
    $[6] = open;
    $[7] = t3;
    $[8] = t4;
    $[9] = t5;
  } else {
    t5 = $[9];
  }
  let t6;
  if ($[10] !== children || $[11] !== isFolderOpen) {
    t6 = isFolderOpen && /* @__PURE__ */ jsx("ul", { className: "x:flex x:flex-col x:gap-2 x:ps-4", children });
    $[10] = children;
    $[11] = isFolderOpen;
    $[12] = t6;
  } else {
    t6 = $[12];
  }
  let t7;
  if ($[13] !== t5 || $[14] !== t6) {
    t7 = /* @__PURE__ */ jsxs("li", { className: "x:flex x:flex-col x:gap-1", children: [
      t5,
      t6
    ] });
    $[13] = t5;
    $[14] = t6;
    $[15] = t7;
  } else {
    t7 = $[15];
  }
  return t7;
};
function _temp(v) {
  return !v;
}
export {
  Folder
};
