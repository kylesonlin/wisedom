"use no memo";
import { jsx } from "react/jsx-runtime";
const GITHUB_ALERT_RE = /^\s*\[!(?<name>.*?)]\s*$/;
const GITHUB_ALERTS = ["note", "tip", "important", "warning", "caution"];
const GITHUB_ALERT_TYPES = new Set(GITHUB_ALERTS);
function withGitHubAlert(fn, Component = "blockquote") {
  return function Blockquote(props) {
    if (Array.isArray(props.children)) {
      const str = props.children[1].props.children;
      if (typeof str === "string") {
        const alertName = str.match(GITHUB_ALERT_RE)?.groups?.name.toLowerCase();
        if (alertName) {
          if (!GITHUB_ALERT_TYPES.has(alertName)) {
            throw new Error(`Invalid GitHub alert type: "${alertName}". Should be one of: ${GITHUB_ALERTS.join(", ")}.`);
          }
          const capitalizedName = alertName[0].toUpperCase() + alertName.slice(1);
          return fn({
            ...props,
            type: alertName,
            children: [/* @__PURE__ */ jsx("b", { children: capitalizedName }, 0), ...props.children.slice(2)]
          });
        }
      }
    }
    return /* @__PURE__ */ jsx(Component, { ...props });
  };
}
export {
  withGitHubAlert
};
