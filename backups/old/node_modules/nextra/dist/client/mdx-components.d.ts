import * as react from 'react';
import { FC, JSX, ComponentPropsWithoutRef } from 'react';
import * as next_image_js from 'next/image.js';
import { MDXWrapper } from '../types.js';
import { ImageZoom } from './components/image-zoom.js';
import 'mdast';
import 'next';
import 'zod';
import '../server/schemas.js';
import './lib/index.js';
import 'rehype-katex/lib/index.js';
import 'better-react-mathjax';
import 'rehype-pretty-code';
import 'next/image';

interface NestedMDXComponents {
    [key: string]: NestedMDXComponents | FC<any> | keyof JSX.IntrinsicElements;
}
type MDXComponents = NestedMDXComponents & {
    [Key in Exclude<keyof JSX.IntrinsicElements, 'img'>]?: FC<ComponentPropsWithoutRef<Key>> | keyof JSX.IntrinsicElements;
} & {
    wrapper?: MDXWrapper;
    img?: FC<ComponentPropsWithoutRef<typeof ImageZoom>>;
};
declare const useMDXComponents: <T extends Readonly<MDXComponents>>(components: T) => {
    img: FC<next_image_js.ImageProps>;
    a: FC<Omit<react.DetailedHTMLProps<react.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, "ref">>;
} & T;

export { type MDXComponents, useMDXComponents };
