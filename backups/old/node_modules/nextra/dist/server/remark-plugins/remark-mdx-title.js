import path from "path";
import { EXIT, visit } from "unist-util-visit";
import { pageTitleFromFilename } from "../utils.js";
import { getFlattenedValue } from "./remark-headings.js";
function getFrontMatterASTObject(node) {
  const [n] = node.data.estree.body;
  return n.declaration.declarations[0].init.properties;
}
function isExportNode(node, varName) {
  if (node.type !== "mdxjsEsm") return false;
  const n = node.data.estree.body[0];
  if (n.type !== "ExportNamedDeclaration") return false;
  const name = n.declaration?.declarations?.[0].id.name;
  if (!name) return false;
  return name === varName;
}
const transformer = (ast, file) => {
  let title = "";
  const frontMatterNode = ast.children.find(
    (node) => isExportNode(node, "metadata")
  );
  for (const { key, value } of getFrontMatterASTObject(frontMatterNode)) {
    if (key.type === "Literal" && key.value === "title") {
      title = value.value;
      break;
    }
    if (key.type === "Identifier" && key.name === "title") {
      title = value.value;
      break;
    }
  }
  if (!title) {
    visit(ast, { type: "heading", depth: 1 }, (node) => {
      title = getFlattenedValue(node);
      return EXIT;
    });
    if (!title) {
      const [filePath] = file.history;
      if (filePath) {
        title = pageTitleFromFilename(path.parse(filePath).name);
      }
    }
    if (title) {
      file.data.title = title;
    }
  }
};
const remarkMdxTitle = () => transformer;
export {
  getFrontMatterASTObject,
  isExportNode,
  remarkMdxTitle
};
