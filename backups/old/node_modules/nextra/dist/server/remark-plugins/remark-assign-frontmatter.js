import path from "path";
import { valueToEstree } from "estree-util-value-to-estree";
import slash from "slash";
import { CWD } from "../constants.js";
import { getFrontMatterASTObject, isExportNode } from "./remark-mdx-title.js";
const remarkAssignFrontMatter = ({ lastCommitTime }) => (ast, file) => {
  const frontMatterNode = ast.children.find(
    (node) => isExportNode(node, "metadata")
  );
  const frontMatter = getFrontMatterASTObject(frontMatterNode);
  const [filePath] = file.history;
  const { readingTime, title } = file.data;
  const { properties } = valueToEstree({
    ...title && { title },
    // File path can be undefined (e.g. dynamic mdx without filePath provided to processor)
    ...filePath && { filePath: slash(path.relative(CWD, filePath)) },
    ...readingTime && { readingTime },
    ...lastCommitTime && { timestamp: lastCommitTime }
  });
  frontMatter.push(...properties);
};
export {
  remarkAssignFrontMatter
};
