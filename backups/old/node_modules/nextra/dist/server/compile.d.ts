import { ProcessorOptions } from '@mdx-js/mdx';
import { LoaderOptions, NextraConfig } from '../types.js';
import 'mdast';
import 'next';
import 'react';
import 'zod';
import './schemas.js';
import './lib/index.js';
import 'rehype-katex/lib/index.js';
import 'better-react-mathjax';
import 'rehype-pretty-code';

type MdxOptions = NextraConfig['mdxOptions'] & Pick<ProcessorOptions, 'jsx' | 'outputFormat' | 'providerImportSource'>;
type CompileMdxOptions = Pick<LoaderOptions, 'staticImage' | 'search' | 'defaultShowCopyCode' | 'readingTime' | 'latex' | 'codeHighlight' | 'whiteListTagsStyling'> & {
    mdxOptions: MdxOptions;
    filePath: string;
    useCachedCompiler: boolean;
    isPageImport: boolean;
    lastCommitTime: number;
};
declare function compileMdx(source: string, { staticImage, search, readingTime, latex, codeHighlight, defaultShowCopyCode, mdxOptions, filePath, useCachedCompiler, isPageImport, whiteListTagsStyling, lastCommitTime }?: Partial<CompileMdxOptions>): Promise<string>;

export { compileMdx };
